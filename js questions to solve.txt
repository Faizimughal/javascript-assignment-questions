let numbers = [3, 6, 8, 12, 15, 21, 28];
ðŸ‘‰ isme se sirf even numbers nikal kar ek naye array me save karo.

let numbers = [3, 6, 8, 12, 15, 21, 28];
evenArray=[];
numbers.forEach((num)=>{
if(num%2==0){
evenArray.push(num);
console.log(evenArray)
}
})


let nums = [5, 10, 15, 20, 25];
ðŸ‘‰ iska sum nikalna hai using reduce.

let sum=nums.reduce((acc,value)=>acc+value,0);
console.log(sum);

let fruits = ["apple", "banana", "mango", "grapes"];
ðŸ‘‰ har fruit ke naam ka pehla letter capital karo.

let capitalText=[]
fruits.forEach((fruit)=>{
capitalText.push(fruit.charAt(0).toUpperCase()+fruit.slice(1))
})
console.log(capitalText);


ðŸ”¹Easy Level

1.Find the sum of all numbers in an array.         âœ”

2.Find the largest and smallest number in an array. âœ”  

3.Reverse an array without using .reverse().   âœ”

4.Count how many times a specific number appears in an array.  âœ”

5.Remove duplicates from an array.    âœ”

6.Check if an array is palindrome (e.g. [1,2,3,2,1]). âœ”

7.Merge two arrays and remove duplicates.  âœ”

8.Find the second largest number in an array.   âœ”

9.Rotate an array by 1 position (e.g. [1,2,3,4] â†’ [4,1,2,3]).  âœ”

10.Count even and odd numbers in an array.   âœ”

ðŸ”¹ Medium Level

1.Find the frequency of each element in an array.     âœ”

2.Flatten a nested array (e.g. [1,[2,3],[4,[5]]] â†’ [1,2,3,4,5]). âœ”

3.Find the missing number in an array (e.g. [1,2,3,5] â†’ 4).   âœ”

4.Find the intersection of two arrays (common elements).   âœ”

5.Find the union of two arrays.   âœ”

6.Check if two arrays are equal (same elements, any order).  âœ”

7.Move all zeros to the end of an array (e.g. [0,1,0,3,12] â†’ [1,3,12,0,0]).  âœ”

8.Find the longest increasing subarray.   âœ”

9.Find the pairs in an array whose sum is equal to a target.   âœ”

10.Check if array contains any duplicates.

ðŸ”¹ Hard Level

1.Find the majority element (appears more than n/2 times).

2.Find the maximum product subarray.

3.Find the subarray with the largest sum (Kadaneâ€™s Algorithm).

4.Rotate an array by k positions.

5.Find all triplets with sum = 0 (3Sum problem).

6.Find the first missing positive number.

7.Find the minimum difference between any two elements.

8.Given a sorted array, remove duplicates in-place.

9.Find the peak element (greater than neighbors).

10.Find the longest consecutive sequence in an array.

âš¡ Suggestion:

Easy se start karo â†’ phir medium â†’ phir hard

Pehle for loop se try karo

Phir map, filter, reduce, forEach se solve karne ki practice karo




1.shift,unshift
2.push,pop
3.sort,length,reduce,split,slice,concat,substr,every,some,match,matchAll,indexof,find,filter,findlast,forEach,join,delete,copywithin,


let a= new Map[name:"faizan",age:24]
a.keys(); result= name,age;
a.values();  result=faizan,24;


let numbers = [3, 6, 8, 12, 15, 21, 28];
let reverseArr=numbers.reverse();
console.log(reverseArr);  //[28,21,15,12,8,6,3]

let numbers = [3, 6, 8, 12, 15, 21, 28];
let sortArr=numbers.sort();
console.log(sortArr)    // [3,6,8,12,15,21,28]

let numbers = [3, 6, 8, 12, 15, 21, 28];
let fillArr=numbers.fill(0);
console.log(fillArr);  //[0,0,0,0,0,0,0];

let a= new Map[name:"faizan",age:24]
let values= from(a as value)=>{console.log(a)};
//faizan,24 

let numbers = [3, 6, 8, 12, 15, 21, 28]; after shift();
result=6, 8, 12, 15, 21, 28


let numbers = [3, 6, 8, 12, 15, 21, 28];
numbers.copywithin(1,5);
result= 3,15,8,12,15,21,28

let numbers = [3, 6, 8, 12, 15, 21, 28];
let b= numbers.some((x)=>x==3);
console.log(b);       //true


let numbers = [3, 6, 8, 12, 15, 21, 28];
let b=numbers.every((x)=>x>10);
console.log(b);      //false


let numbers = [3, 6, 8, 12, 15, 21, 28];
let value= numbers.splice(4,2,"new");
console.log(value)      //[15,21]
console.log(numbers)    // [3,6,8,12,new,28]

let numbers = [3, 6, 8, 12, 15, 21, 28];
let value= numbers.splice(4,2,"new","khurram");
console.log(value)      //[15,21]
console.log(numbers)    //[3,6,8,12,new,khurram,28]

let numbers = [3, 6,[ 8, 12] 15, [23], 28];
let flatArr=numbers.flat();
console.log(flatArr);  //   [3, 6, 8, 12 15, 23, 28]

               0  1  2   3   4   5   6
let numbers = [3, 6, 8, 12, 15, 21, 28];
let subStr=numbers.slice(1,5);
console.log(subStr);     // [6,8,12,15] 

let numbers = [3, 6, 8, 12, 15, 21, 28];
numbers.findIndex(num=>num==12);
result //3

let numbers = [3, 6, 8, 12, 15, 21, 28];
let b = numbers.indexOf(12)  //result=3


let numbers = [3, 6, 8, 12, 15, 21, 28];
let num = numbers.find((x)=>x>12);
console.log(num)    //15   

let numbers = [3, 6, 8, 12, 15, 21, 28];
let num = numbers.filter((x)=>x>12);
console.log(num)    //15,21,28

let numbers = [3, 6, 8, 12, 15, 21, 28];
let b = numbers.includes(14);
console.log(b)         //result = false

person{
    name:"faizan",
    age:24,
    country:"Paksitan"
}
console.log(Object.entries());

output
 [
  ["name", "faizan"],
  ["age", 24],
  ["country", "Pakistan"]
]

let numbers = [3, 6, 8, 12, 15, 21, 28];
console.log(Array.isArray(numbers));
//true

let numbers = [3, 6, 8, 12, 15, 21, 28];
let reverseStr=[];
for(let i=0;i<numbers.length;i++){
let num = numbers[i];
reverseStr.unshift(num);
  }
  console.log(reverseStr);

  console.log()     //12:2,10:2,13:1,14:3,15:1,2:1


  let numbers = [12, 10, 13, 10, 14, 14, 14, 15, 2, 12];
  let result = {};

numbers.forEach(num => {
  if (result[num]) {
    result[num]++;  // agar number pehle se hai to count badhao
  } else {
    result[num] = 1; // pehli dafa aaye to 1 set karo
  }
});

console.log(result);



  let numbers = [12, 10, 13, 10, 14, 14, 14, 15, 2, 12];
let newArray= new Set(...numbers);
console.log(newArray);


6.Check if an array is palindrome (e.g. [1,2,3,2,1]).
let numbers=[1,2,3,2,1];
let newArr=numbers.split("").reverse().join("");
if(newArr==numbers){
    console.log("this is palindrome array");
}else{
    console.log("this is not a palindrome array");
}


let numbers = [10,12,13,14,15,16];
let newNumbers = [10,12,13,13,,14,18,19];
let mergeArr = numbers.concat(newNumbers);
let uniqueArr= [...new Set(mergeArr)];
console.log(uniqueArr);

8.Find the second largest number in an array.

let numbers = [10,12,13,14,15,16];
let largestNum = Math.max(...numbers);
let secondLargestNum = Math.max(...numbers.filter(num => num !== largestNum));
console.log(secondLargestNum);


10.Count even and odd numbers in an array.

let numbers =[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20];
let evenNumbers=[];
let oddNumbers=[];
numbers.forEach((num)=>{
  if(num%2==0)
  evenNumbers.unshift(num);
  else
  oddNumbers.unshift(num);
})
console.log("even numbers in an array:",evenNumbers.length,"oddNumbers in an array:",oddNumbers.length)


2.Flatten a nested array (e.g. [1,[2,3],[4,[5]]] â†’ [1,2,3,4,5]).

let arr=[1,[2,3],[4,[5]]];
let flattenArr=arr.flat();
console.log(flattenArr);



3.Find the missing number in an array (e.g. [1,2,3,5] â†’ 4). 

let numbers = [1,2,3,4,5,8,9]
let b = numbers.forEach((num)=>{
  let missingNum=num+1;
  if(numbers has missingNum)
  console.log("no any missing Number")
  else 
  console.log(missingNum)
})


4.Find the intersection of two arrays (common elements).

let Arr1=["apple","mango","banana","pineapple","orange","grapes"];
let Arr2=["apple","mango","banana","orange","melon","watermelon"];
console.log(commonFruits);

let Arr1=[1,2,3,4,5];
let Arr2=[5,4,2,1,3];
if(Arr1.sort()===Arr2.sort())
console.log("both are same")


9.Find the pairs in an array whose sum is equal to a target.  
let arr=[1,2,3,4,5,6,7];
let target=7;
let seen=new Set();
for(let num of arr){
  let compliment = target-num;
  if(seen.has(compliment)){
    console.log("pair is found")
  }
  seen.add(compliment);
}
